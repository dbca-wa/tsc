# Generated by Django 2.1.7 on 2019-04-26 03:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('occurrence', '0025_auto_20190426_1016'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drainage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='A unique, url-safe code.', max_length=500, unique=True, verbose_name='Code')),
                ('label', models.CharField(blank=True, help_text='A human-readable, self-explanatory label.', max_length=500, null=True, verbose_name='Label')),
                ('description', models.TextField(blank=True, help_text='A comprehensive description.', null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RockType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='A unique, url-safe code.', max_length=500, unique=True, verbose_name='Code')),
                ('label', models.CharField(blank=True, help_text='A human-readable, self-explanatory label.', max_length=500, null=True, verbose_name='Label')),
                ('description', models.TextField(blank=True, help_text='A comprehensive description.', null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoilColour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='A unique, url-safe code.', max_length=500, unique=True, verbose_name='Code')),
                ('label', models.CharField(blank=True, help_text='A human-readable, self-explanatory label.', max_length=500, null=True, verbose_name='Label')),
                ('description', models.TextField(blank=True, help_text='A comprehensive description.', null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoilType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='A unique, url-safe code.', max_length=500, unique=True, verbose_name='Code')),
                ('label', models.CharField(blank=True, help_text='A human-readable, self-explanatory label.', max_length=500, null=True, verbose_name='Label')),
                ('description', models.TextField(blank=True, help_text='A comprehensive description.', null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='landform',
            field=models.ForeignKey(blank=True, help_text='The landform.', null=True, on_delete=django.db.models.deletion.CASCADE, to='occurrence.Landform', verbose_name='Landform'),
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='loose_rock_percent',
            field=models.PositiveIntegerField(blank=True, help_text='The proportion of habitat covered by loose rock in percent from none (0) to all (100).', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Loose rock [%]'),
        ),
        migrations.AlterField(
            model_name='areaencounter',
            name='source_id',
            field=models.CharField(default=uuid.UUID('b834e00e-67d1-11e9-a870-40f02f6195e0'), help_text='The ID of the record in the original source, if available.', max_length=1000, verbose_name='Source ID'),
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='drainage',
            field=models.ForeignKey(blank=True, help_text='Add missing drainage types via the data curation portal.', null=True, on_delete=django.db.models.deletion.CASCADE, to='occurrence.Drainage', verbose_name='Drainage'),
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='rock_type',
            field=models.ForeignKey(blank=True, help_text='Add missing rock types via the data curation portal.', null=True, on_delete=django.db.models.deletion.CASCADE, to='occurrence.RockType', verbose_name='Rock type'),
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='soil_colour',
            field=models.ForeignKey(blank=True, help_text='Add missing soil colours via the data curation portal.', null=True, on_delete=django.db.models.deletion.CASCADE, to='occurrence.SoilColour', verbose_name='Soil colour'),
        ),
        migrations.AddField(
            model_name='habitatcomposition',
            name='soil_type',
            field=models.ForeignKey(blank=True, help_text='Add missing soil types via the data curation portal.', null=True, on_delete=django.db.models.deletion.CASCADE, to='occurrence.SoilType', verbose_name='Soil type'),
        ),
    ]
